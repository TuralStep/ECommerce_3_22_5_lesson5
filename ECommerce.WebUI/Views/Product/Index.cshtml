@model ProductListViewModel
@if (Model.Products == null || Model.Products.Count == 0)
{
    <span class="alert alert-info">No Product Exist</span>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>
                    @{
                        var az = (Model.IsAtoZ) ? "A-Z" : "Z-A";
                    }
                    <a class="btn btn-xs btn-warning"
                       asp-controller="Product"
                       asp-action="ChangeAtoZ"
                       asp-route-page="@Model.CurrentPage"
                       asp-route-category="@Model.CurrentCategory"
                       asp-route-az="@Model.IsAtoZ"
                       asp-route-highlow="@Model.IsHighToLow">
                        @az
                    </a>
                </th>
                <th>
                    @{
                        var highlow = (Model.IsHighToLow) ? "Higher to lower" : "Lower to higher";
                    }
                    <a class="btn btn-xs btn-warning"
                       asp-controller="Product"
                       asp-action="ChangeHighLow"
                       asp-route-page="@Model.CurrentPage"
                       asp-route-category="@Model.CurrentCategory"
                       asp-route-az="@Model.IsAtoZ"
                       asp-route-highlow="@Model.IsHighToLow">
                        @highlow
                    </a>
                </th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <thead>
            <tr>
                <th>Product Name</th>
                <th>Unit Price</th>
                <th>UnitsInStock</th>
                <th></th>
            </tr>
        </thead>
        <tbody>

            @if (Model.Which)
            {
                @if (Model.IsAtoZ)
                    Model.Products.Sort((x, y) => x.ProductName.CompareTo(y.ProductName));
                else
                    Model.Products.Sort((y, x) => x.ProductName.CompareTo(y.ProductName));
            }
            else
            {
                @if (Model.IsHighToLow)
                    Model.Products.Sort((y, x) => x.UnitPrice.CompareTo(y.UnitPrice));
                else
                    Model.Products.Sort((x, y) => x.UnitPrice.CompareTo(y.UnitPrice));
            }

            @foreach (var item in Model.Products)
            {
                var style = "";
                @if (item.UnitsInStock == 0)
                {
                    style = "background-color:rgba(255,0,0,0.5);";
                }
                <tr style="@style">
                    <td>
                        @item.ProductName
                    </td>
                    <td>
                        @item.UnitPrice
                    </td>
                    <td>
                        @item.UnitsInStock
                    </td>
                    @if (style == "")
                    {
                        <td>
                            <a class="btn btn-xs btn-success"
                               href="/Cart/AddToCart?productId=@item.ProductId&page=@Model.CurrentPage&category=@Model.CurrentCategory">Add To Cart</a>
                        </td>
                    }
                   
                </tr>
            }
        </tbody>
    </table>
    <product-list-pager current-category="@Model.CurrentCategory"
                        current-page="@Model.CurrentPage"
                        page-count="@Model.PageCount"
                        page-size="@Model.PageSize"></product-list-pager>
}